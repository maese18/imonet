# Use root/example as user/password credentials
version: "3.1"

services:
  web-built:
    image: nginx:stable-alpine
    ports:
      - ${WEBAPP_PORT}:80
    volumes:
      - ../ui-vuetify/dist:/usr/share/nginx/html
      - ../ui-vuetify/nginx/nginx.conf:/etc/nginx/nginx.conf
    command: [nginx, "-g", "daemon off;"]
    environment:
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_THEME_COLOR: ${VUE_APP_THEME_COLOR}
    networks:
      proxy:
  web:
    image: node:13.6.0-alpine3.10
    restart: "no"
    volumes:
      - ../ui-vuetify:/usr/src/app
    working_dir: /usr/src/app
    command: "yarn serve --port 8080"
    environment:
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_THEME_COLOR: ${VUE_APP_THEME_COLOR}
    env_file:
      - ./.env-${ENV}
    ports:
      - ${WEBAPP_PORT}:8080
    networks:
      proxy:
  api:
    image: node:13.6.0-alpine3.10
    restart: "no"
    volumes:
      - ../api:/usr/src/app # map code
      - ../api/media:/usr/src/app/media

    working_dir: /usr/src/app
    command: yarn start
    env_file:
      - ./.env-${ENV}
    environment:
      API_SERVER_PORT: ${API_SERVER_PORT}
    ports:
      - ${API_SERVER_PUBLIC_PORT}:${API_SERVER_PORT}
    depends_on:
      - db
    networks:
      proxy:

  db:
    image: mariadb/server
    # !!! command is a must if using with mariaDb driver -- otherwise you'll have connection issues !!!
    #
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_INITDB_SKIP_TZINFO: "true"
    volumes:
      - ../db/mysql/data:/var/lib/mysql
      - ../db/mysql/db-setup/default:/docker-entrypoint-initdb.d
    ports:
      - ${DB_PORT}:3306

    networks:
      - proxy

  adminer:
    image: adminer
    restart: always
    ports:
      - ${DB_ADMIN_PORT}:8080
    networks:
      - proxy

  prisma:
    image: prismagraphql/prisma:1.34
    restart: always
    ports:
      - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: mongo
            uri: mongodb://prisma:prisma@mongo
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: imonet
      MONGO_INITDB_ROOT_PASSWORD: imonet
      MONGO_INITDB_DATABASE: imonet
    ports:
      - "27017:27017"
    volumes:
      - ../db/mongo/data:/var/lib/mongo
      - ../db/mongo/db-setup:/docker-entrypoint-initdb.d
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 3001:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: imonet
      ME_CONFIG_MONGODB_ADMINPASSWORD: imonet

  # mongo:
  #   image: mongo
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_DATABASE="test"
  #     - MONGO_INITDB_ROOT_USERNAME="root"
  #     - MONGO_INITDB_ROOT_PASSWORD="pw"
  #     #- MONGO_INITDB_USERNAME="dbuser"
  #     #- MONGO_INITDB_PASSWORD="pw"
  #     - MONGODB_DATA_DIR="/data/db"
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ../db/mongo/data:/data/db
  #     - ../db/mongo/init/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
  #   networks:
  #     proxy:
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 4023:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: pw
  #   networks:
  #     proxy:

networks:
  proxy:
volumes:
  api:
  mysql:
  data:
    driver: local
