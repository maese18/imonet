worker_processes  5;
error_log  logs/error.log;

pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  2048;  ## Default: 1024
}

http {
    tcp_nopush   on;
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts
    access_log logs/access.log;
    resolver 127.0.0.11 ipv6=off;
    resolver_timeout 5s;
   
    # Redirect any connection on http to https
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }  

    

    # Means that proxy_pass hosts, here imonetprod_web is resolved to addresses listed as server, that is imonetprod_web_1:80
    # weight=3 means that this server is preferred
    upstream imonetprod_web {
        server imonetprod_web_1:80 weight=3;
        #server imonetprod_web_2:80;
        #server imonetprod_web_3:80;    
    }
    server {
        # Listen for ipv6
        #listen [::]:443 ssl http2 ipv6only=on; 
        listen [::]:443 ssl http2; 
        # Listen for ipv4
        listen 443 ssl http2;
        # The server_name is used to match the correct server section.
        # However if no match occurs the first server section is applied.
        server_name web.adivo.ch;
        
        location / {
            # When using the internal url of the web service:
            # proxy_pass http://imonetprod_web_1:80; 

            # Reference the upstream server configured above
            proxy_pass http://imonetprod_web; 
        }
       
        ssl_certificate /etc/letsencrypt/live/adivo.ch/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/adivo.ch/privkey.pem;
    
        # comment the following line and add the ssl_ciphers to enable http2
        # include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
   
   # --------------------------------------------------------------------------------------
    # REST API configuration
    upstream imonetprod_api {
        server imonetprod_api_1:3000 weight=3;
    }
    server { 
        # Listen for ipv6
        # listen [::]:443 ssl http2 ipv6only=on; 
        listen [::]:443 ssl http2; 
        # Listen for ipv4
        listen 443 ssl http2;
       
        server_name api.adivo.ch;
        
        # Pattern to access the api service
        # Example: http://dbadmin.rhb.innotix.local
        location / {
            proxy_pass         http://imonetprod_api;
            # proxy_redirect     off;
            # proxy_set_header   Host $host;
            # proxy_set_header   X-Real-IP $remote_addr;
            # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header   X-Forwarded-Host $server_name;
        }
        ssl_certificate /etc/letsencrypt/live/adivo.ch/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/adivo.ch/privkey.pem;
        ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
    # --------------------------------------------------------------------------------------
    # DB Admin Tool
    upstream imonetprod_adminer {
        server imonetprod_adminer_1:4022 weight=3;
    }
    
    server { 
        # Listen for ipv6
        #listen [::]:443 ssl http2 ipv6only=on; 
        listen [::]:443 ssl http2; 
        # Listen for ipv4
        listen 443 ssl http2;
       
        server_name adminer.adivo.ch;
        
        # Pattern to access the api service
        # Example: http://dbadmin.rhb.innotix.local
        location / {
            proxy_pass         http://imonetprod_adminer;
            # proxy_redirect     off;
            # proxy_set_header   Host $host;
            # proxy_set_header   X-Real-IP $remote_addr;
            # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
